// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: laundry/laundry_service.proto

package laundry

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	LaundryService_CreateLaundryBooking_FullMethodName   = "/laundry.LaundryService/CreateLaundryBooking"
	LaundryService_GetLaundryBookings_FullMethodName     = "/laundry.LaundryService/GetLaundryBookings"
	LaundryService_GetUserLaundryBookings_FullMethodName = "/laundry.LaundryService/GetUserLaundryBookings"
	LaundryService_DeleteLaundryBooking_FullMethodName   = "/laundry.LaundryService/DeleteLaundryBooking"
)

// LaundryServiceClient is the client API for LaundryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LaundryServiceClient interface {
	CreateLaundryBooking(ctx context.Context, in *CreateLaundryBookingRequest, opts ...grpc.CallOption) (*CreateLaundryBookingResponse, error)
	GetLaundryBookings(ctx context.Context, in *GetLaundryBookingsRequest, opts ...grpc.CallOption) (*GetLaundryBookingsResponse, error)
	GetUserLaundryBookings(ctx context.Context, in *GetUserLaundryBookingsRequest, opts ...grpc.CallOption) (*GetUserLaundryBookingsResponse, error)
	DeleteLaundryBooking(ctx context.Context, in *DeleteLaundryBookingRequest, opts ...grpc.CallOption) (*DeleteLaundryBookingResponse, error)
}

type laundryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLaundryServiceClient(cc grpc.ClientConnInterface) LaundryServiceClient {
	return &laundryServiceClient{cc}
}

func (c *laundryServiceClient) CreateLaundryBooking(ctx context.Context, in *CreateLaundryBookingRequest, opts ...grpc.CallOption) (*CreateLaundryBookingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateLaundryBookingResponse)
	err := c.cc.Invoke(ctx, LaundryService_CreateLaundryBooking_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laundryServiceClient) GetLaundryBookings(ctx context.Context, in *GetLaundryBookingsRequest, opts ...grpc.CallOption) (*GetLaundryBookingsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetLaundryBookingsResponse)
	err := c.cc.Invoke(ctx, LaundryService_GetLaundryBookings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laundryServiceClient) GetUserLaundryBookings(ctx context.Context, in *GetUserLaundryBookingsRequest, opts ...grpc.CallOption) (*GetUserLaundryBookingsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetUserLaundryBookingsResponse)
	err := c.cc.Invoke(ctx, LaundryService_GetUserLaundryBookings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *laundryServiceClient) DeleteLaundryBooking(ctx context.Context, in *DeleteLaundryBookingRequest, opts ...grpc.CallOption) (*DeleteLaundryBookingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteLaundryBookingResponse)
	err := c.cc.Invoke(ctx, LaundryService_DeleteLaundryBooking_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LaundryServiceServer is the server API for LaundryService service.
// All implementations must embed UnimplementedLaundryServiceServer
// for forward compatibility.
type LaundryServiceServer interface {
	CreateLaundryBooking(context.Context, *CreateLaundryBookingRequest) (*CreateLaundryBookingResponse, error)
	GetLaundryBookings(context.Context, *GetLaundryBookingsRequest) (*GetLaundryBookingsResponse, error)
	GetUserLaundryBookings(context.Context, *GetUserLaundryBookingsRequest) (*GetUserLaundryBookingsResponse, error)
	DeleteLaundryBooking(context.Context, *DeleteLaundryBookingRequest) (*DeleteLaundryBookingResponse, error)
	mustEmbedUnimplementedLaundryServiceServer()
}

// UnimplementedLaundryServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedLaundryServiceServer struct{}

func (UnimplementedLaundryServiceServer) CreateLaundryBooking(context.Context, *CreateLaundryBookingRequest) (*CreateLaundryBookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLaundryBooking not implemented")
}
func (UnimplementedLaundryServiceServer) GetLaundryBookings(context.Context, *GetLaundryBookingsRequest) (*GetLaundryBookingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLaundryBookings not implemented")
}
func (UnimplementedLaundryServiceServer) GetUserLaundryBookings(context.Context, *GetUserLaundryBookingsRequest) (*GetUserLaundryBookingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserLaundryBookings not implemented")
}
func (UnimplementedLaundryServiceServer) DeleteLaundryBooking(context.Context, *DeleteLaundryBookingRequest) (*DeleteLaundryBookingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLaundryBooking not implemented")
}
func (UnimplementedLaundryServiceServer) mustEmbedUnimplementedLaundryServiceServer() {}
func (UnimplementedLaundryServiceServer) testEmbeddedByValue()                        {}

// UnsafeLaundryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LaundryServiceServer will
// result in compilation errors.
type UnsafeLaundryServiceServer interface {
	mustEmbedUnimplementedLaundryServiceServer()
}

func RegisterLaundryServiceServer(s grpc.ServiceRegistrar, srv LaundryServiceServer) {
	// If the following call pancis, it indicates UnimplementedLaundryServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&LaundryService_ServiceDesc, srv)
}

func _LaundryService_CreateLaundryBooking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLaundryBookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaundryServiceServer).CreateLaundryBooking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LaundryService_CreateLaundryBooking_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaundryServiceServer).CreateLaundryBooking(ctx, req.(*CreateLaundryBookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaundryService_GetLaundryBookings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLaundryBookingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaundryServiceServer).GetLaundryBookings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LaundryService_GetLaundryBookings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaundryServiceServer).GetLaundryBookings(ctx, req.(*GetLaundryBookingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaundryService_GetUserLaundryBookings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserLaundryBookingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaundryServiceServer).GetUserLaundryBookings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LaundryService_GetUserLaundryBookings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaundryServiceServer).GetUserLaundryBookings(ctx, req.(*GetUserLaundryBookingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LaundryService_DeleteLaundryBooking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLaundryBookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LaundryServiceServer).DeleteLaundryBooking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: LaundryService_DeleteLaundryBooking_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LaundryServiceServer).DeleteLaundryBooking(ctx, req.(*DeleteLaundryBookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// LaundryService_ServiceDesc is the grpc.ServiceDesc for LaundryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LaundryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "laundry.LaundryService",
	HandlerType: (*LaundryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLaundryBooking",
			Handler:    _LaundryService_CreateLaundryBooking_Handler,
		},
		{
			MethodName: "GetLaundryBookings",
			Handler:    _LaundryService_GetLaundryBookings_Handler,
		},
		{
			MethodName: "GetUserLaundryBookings",
			Handler:    _LaundryService_GetUserLaundryBookings_Handler,
		},
		{
			MethodName: "DeleteLaundryBooking",
			Handler:    _LaundryService_DeleteLaundryBooking_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "laundry/laundry_service.proto",
}
