syntax = "proto3";

option go_package = "dormitory-helper-service/generated/proto/kitchen;kitchen";

package kitchen;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

// Сообщение для создания записи на кухню
message CreateKitchenBookingRequest {
  string token = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
}

message CreateKitchenBookingResponse {
  int32 booking_id = 1;
  string message = 2;
}

// Сообщение для получения всех записей
message GetKitchenBookingsRequest {
  optional google.protobuf.Timestamp start_time = 1;
  optional google.protobuf.Timestamp end_time = 2;
}

message KitchenBooking {
  int32 id = 1;
  int32 user_id = 2;
  google.protobuf.Timestamp start_time = 3;
  google.protobuf.Timestamp end_time = 4;
}

message GetKitchenBookingsResponse {
  repeated KitchenBooking bookings = 1;
}

// Сообщение для получения записей пользователя
message GetUserKitchenBookingsRequest {
  string token = 1;
}

message GetUserKitchenBookingsResponse {
  repeated KitchenBooking bookings = 1;
}

// Сообщение для удаления записи
message DeleteKitchenBookingRequest {
  string token = 1;
  int32 booking_id = 2;
}

message DeleteKitchenBookingResponse {
  string message = 1;
}

service KitchenService {
  rpc CreateKitchenBooking(CreateKitchenBookingRequest) returns (CreateKitchenBookingResponse) {
    option (google.api.http) = {
      post: "/api/v1/kitchen/bookings"
      body: "*"
    };
  }
  rpc GetKitchenBookings(GetKitchenBookingsRequest) returns (GetKitchenBookingsResponse) {
    option (google.api.http) = {
      get: "/api/v1/kitchen/bookings"
    };
  }
  rpc GetUserKitchenBookings(GetUserKitchenBookingsRequest) returns (GetUserKitchenBookingsResponse) {
    option (google.api.http) = {
      get: "/api/v1/kitchen/bookings/my"
    };
  }
  rpc DeleteKitchenBooking(DeleteKitchenBookingRequest) returns (DeleteKitchenBookingResponse) {
    option (google.api.http) = {
      delete: "/api/v1/kitchen/bookings/{booking_id}"
    };
  }
}
